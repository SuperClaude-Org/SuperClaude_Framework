{
  "progress.eta": "ETA: {0}",
  "progress.complete": "Complete",
  "menu.multi_select_prompt": "Enter numbers separated by commas (e.g., 1,3,5) or 'all' for all options:",
  "menu.single_select_prompt": "Enter your choice (1-{0}):",
  "menu.invalid_option": "Invalid option: {0}",
  "menu.invalid_input": "Invalid input: {0}",
  "menu.invalid_choice": "Invalid choice. Please enter a number between 1 and {0}.",
  "menu.invalid_number": "Please enter a valid number.",
  "general.operation_cancelled": "Operation cancelled.",
  "confirm.prompt_yes_default": "[Y/n]",
  "confirm.prompt_no_default": "[y/N]",
  "confirm.invalid_choice": "Please enter 'y' or 'n' (or press Enter for default).",
  "info.prefix": "[INFO]",
  "success.prefix": "[‚úì]",
  "warning.prefix": "[!]",
  "error.prefix": "[‚úó]",
  "step.prefix": "[{0}/{1}]",
  "general.press_enter_to_continue": "Press Enter to continue...",
  "spinner.working": "Working...",
  "time.seconds": "s",
  "time.minutes": "m",
  "time.hours": "h",
  "time.milliseconds": "ms",
  "size.bytes": "B",
  "size.kilobytes": "KB",
  "size.megabytes": "MB",
  "size.gigabytes": "GB",
  "size.terabytes": "TB",
  "size.petabytes": "PB",
  "main.title": "SuperClaude Framework v3.0",
  "main.subtitle": "Unified CLI for all operations",
  "main.available_operations": "Available operations:",
  "op.install": "Install SuperClaude framework components",
  "op.update": "Update existing SuperClaude installation",
  "op.uninstall": "Remove SuperClaude installation",
  "op.backup": "Backup and restore operations",
  "install.parser.help": "Install SuperClaude framework components",
  "install.parser.description": "Install SuperClaude Framework with various options and profiles",
  "install.parser.quick_help": "Quick installation with pre-selected components",
  "install.parser.minimal_help": "Minimal installation (core only)",
  "install.parser.profile_help": "Installation profile (quick, minimal, developer, etc.)",
  "install.parser.components_help": "Specific components to install",
  "install.parser.no_backup_help": "Skip backup creation",
  "install.parser.list_components_help": "List available components and exit",
  "install.parser.diagnose_help": "Run system diagnostics and show installation help",
  "install.validate.validating": "Validating system requirements...",
  "install.validate.success": "All system requirements met",
  "install.validate.failed": "System requirements not met:",
  "install.validate.help_header": "üí° Installation Help:",
  "install.validate.help_diagnose": "Run 'SuperClaude install --diagnose' for detailed system diagnostics",
  "install.validate.help_instructions": "and step-by-step installation instructions.",
  "install.validate.error": "Could not validate system requirements: {0}",
  "install.components.load_profile_error": "Could not load profile '{0}': {1}",
  "install.components.load_quick_profile_error": "Could not load quick profile: {0}",
  "install.components.no_components_available": "No components available for installation",
  "install.components.no_description": "No description",
  "install.components.unknown_category": "unknown",
  "install.components.unavailable_description": "Component description unavailable",
  "install.components.quick_install": "Quick Installation (recommended components)",
  "install.components.minimal_install": "Minimal Installation (core only)",
  "install.components.custom_selection": "Custom Selection",
  "install.components.options_header": "SuperClaude Installation Options:",
  "install.components.select_type": "Select installation type:",
  "install.components.available_header": "Available Components:",
  "install.components.select_components": "Select components to install:",
  "install.components.no_components_selected": "No components selected",
  "install.components.selection_error": "Error in component selection: {0}",
  "install.plan.header": "Installation Plan",
  "install.plan.directory": "Installation Directory:",
  "install.plan.components": "Components to install:",
  "install.plan.unknown_component": "Unknown component",
  "install.plan.estimated_size": "Estimated size:",
  "install.plan.resolve_error": "Could not resolve dependencies: {0}",
  "install.diagnostics.header": "SuperClaude System Diagnostics",
  "install.diagnostics.platform": "Platform:",
  "install.diagnostics.checks": "System Checks:",
  "install.diagnostics.issues": "Issues Found:",
  "install.diagnostics.recommendations": "Recommendations:",
  "install.diagnostics.all_passed": "‚úÖ All system checks passed! Your system is ready for SuperClaude.",
  "install.diagnostics.issues_found": "‚ö†Ô∏è  Some issues found. Please address the recommendations above.",
  "install.diagnostics.next_steps": "Next steps:",
  "install.diagnostics.next_steps_passed_1": "1. Run 'SuperClaude install' to proceed with installation",
  "install.diagnostics.next_steps_passed_2": "2. Choose your preferred installation mode (quick, minimal, or custom)",
  "install.diagnostics.next_steps_failed_1": "1. Install missing dependencies using the commands above",
  "install.diagnostics.next_steps_failed_2": "2. Restart your terminal after installing tools",
  "install.diagnostics.next_steps_failed_3": "3. Run 'SuperClaude install --diagnose' again to verify",
  "install.perform.prefix": "Installing: ",
  "install.perform.installing": "Installing {0} components...",
  "install.perform.installed": "Installed {0}",
  "install.perform.failed": "Failed {0}",
  "install.perform.complete": "Installation complete",
  "install.perform.success": "Installation completed successfully in {0} seconds",
  "install.perform.installed_components": "Installed components: {0}",
  "install.perform.backup_created": "Backup created: {0}",
  "install.perform.error": "Installation completed with errors in {0} seconds",
  "install.perform.failed_components": "Failed components: {0}",
  "install.perform.unexpected_error": "Unexpected error during installation: {0}",
  "install.run.invalid_path_header": "Installation must be inside your user profile directory.",
  "install.run.invalid_path_expected": "Expected prefix: {0}",
  "install.run.invalid_path_provided": "Provided path:   {0}",
  "install.run.header": "SuperClaude Installation v3.0",
  "install.run.subtitle": "Installing SuperClaude framework components",
  "install.run.no_components_found": "No components found",
  "install.run.initializing": "Initializing installation system...",
  "install.run.config_validation_failed": "Configuration validation failed:",
  "install.run.no_components_selected": "No components selected for installation",
  "install.run.reqs_not_met": "System requirements not met. Use --force to override.",
  "install.run.reqs_not_met_force": "System requirements not met, but continuing due to --force flag",
  "install.run.dir_exists": "Installation directory already exists: {0}",
  "install.run.confirm_update": "Continue and update existing installation?",
  "install.run.cancelled": "Installation cancelled by user",
  "install.run.confirm_proceed": "Proceed with installation?",
  "install.run.success": "SuperClaude installation completed successfully!",
  "install.run.next_steps_header": "Next steps:",
  "install.run.next_steps_1": "1. Restart your Claude Code session",
  "install.run.next_steps_2": "2. Framework files are now available in {0}",
  "install.run.next_steps_3": "3. Use SuperClaude commands and features in Claude Code",
  "install.run.failed": "Installation failed. Check logs for details.",
  "update.parser.help": "Update existing SuperClaude installation",
  "update.parser.description": "Update SuperClaude Framework components to latest versions",
  "update.parser.check_help": "Check for available updates without installing",
  "update.parser.components_help": "Specific components to update",
  "update.parser.backup_help": "Create backup before update",
  "update.parser.no_backup_help": "Skip backup creation",
  "update.parser.reinstall_help": "Reinstall components even if versions match",
  "update.check.results_header": "Update Check Results",
  "update.check.no_installation": "No SuperClaude installation found",
  "update.check.installed_components": "Currently installed components:",
  "update.check.available_updates": "Available updates:",
  "update.check.all_up_to_date": "All components are up to date",
  "update.components.not_installed": "Components not installed: {0}",
  "update.components.no_updates_available": "No updates available",
  "update.selection.header": "Available Updates:",
  "update.selection.update_all": "Update All Components",
  "update.selection.select_individual": "Select Individual Components",
  "update.selection.cancel": "Cancel Update",
  "update.selection.prompt": "Select update option:",
  "update.selection.select_components": "Select components to update:",
  "update.plan.header": "Update Plan",
  "update.plan.reinstall": "(reinstall)",
  "update.perform.prefix": "Updating: ",
  "update.perform.updating": "Updating {0} components...",
  "update.perform.updated": "Updated {0}",
  "update.perform.failed": "Failed {0}",
  "update.perform.complete": "Update complete",
  "update.perform.success": "Update completed successfully in {0} seconds",
  "update.perform.updated_components": "Updated components: {0}",
  "update.perform.error": "Update completed with errors in {0} seconds",
  "update.perform.unexpected_error": "Unexpected error during update: {0}",
  "update.run.header": "SuperClaude Update v3.0",
  "update.run.subtitle": "Updating SuperClaude framework components",
  "update.run.not_found": "SuperClaude installation not found in {0}",
  "update.run.install_first": "Use 'SuperClaude install' to install SuperClaude first",
  "update.run.checking": "Checking for available updates...",
  "update.run.could_not_get_installed": "Could not determine installed components",
  "update.run.cancelled": "Update cancelled by user",
  "update.run.no_components_selected": "No components selected for update",
  "update.run.confirm_proceed": "Proceed with update?",
  "update.run.success": "SuperClaude update completed successfully!",
  "update.run.next_steps_1": "1. Restart your Claude Code session",
  "update.run.next_steps_2": "2. Updated components are now available",
  "update.run.next_steps_3": "3. Check for any breaking changes in documentation",
  "update.run.failed": "Update failed. Check logs for details.",
  "uninstall.parser.help": "Remove SuperClaude framework installation",
  "uninstall.parser.description": "Uninstall SuperClaude Framework components",
  "uninstall.parser.components_help": "Specific components to uninstall",
  "uninstall.parser.complete_help": "Complete uninstall (remove all files and directories)",
  "uninstall.parser.keep_backups_help": "Keep backup files during uninstall",
  "uninstall.parser.keep_logs_help": "Keep log files during uninstall",
  "uninstall.parser.keep_settings_help": "Keep user settings during uninstall",
  "uninstall.parser.no_confirm_help": "Skip confirmation prompts (use with caution)",
  "uninstall.info.header": "Current Installation",
  "uninstall.info.no_installation": "No SuperClaude installation found",
  "uninstall.info.directory": "Installation Directory:",
  "uninstall.info.components": "Installed Components:",
  "uninstall.info.files": "Files:",
  "uninstall.info.directories": "Directories:",
  "uninstall.info.total_size": "Total Size:",
  "uninstall.components.not_installed": "Components not installed: {0}",
  "uninstall.selection.header": "Uninstall Options:",
  "uninstall.selection.complete": "Complete Uninstall (remove everything)",
  "uninstall.selection.specific": "Remove Specific Components",
  "uninstall.selection.cancel": "Cancel Uninstall",
  "uninstall.selection.prompt": "Select uninstall option:",
  "uninstall.selection.select_components": "Select components to uninstall:",
  "uninstall.plan.header": "Uninstall Plan",
  "uninstall.plan.components_to_remove": "Components to remove:",
  "uninstall.plan.preserving": "Will preserve:",
  "uninstall.plan.backup_files": "backup files",
  "uninstall.plan.log_files": "log files",
  "uninstall.plan.user_settings": "user settings",
  "uninstall.plan.warning_complete": "WARNING: Complete uninstall will remove all SuperClaude files",
  "uninstall.backup.creating": "Creating uninstall backup: {0}",
  "uninstall.backup.success": "Backup created: {0}",
  "uninstall.backup.error": "Could not create backup: {0}",
  "uninstall.perform.prefix": "Uninstalling: ",
  "uninstall.perform.uninstalling": "Uninstalling {0} components...",
  "uninstall.perform.component_uninstalling": "Uninstalling {0}",
  "uninstall.perform.success": "Successfully uninstalled {0}",
  "uninstall.perform.failed": "Failed to uninstall {0}",
  "uninstall.perform.not_found": "Component {0} not found, skipping",
  "uninstall.perform.error": "Error uninstalling {0}: {1}",
  "uninstall.perform.processed": "Processed {0}",
  "uninstall.perform.complete": "Uninstall complete",
  "uninstall.perform.failures": "Uninstall completed with some failures in {0} seconds",
  "uninstall.perform.failed_components": "Failed components: {0}",
  "uninstall.perform.success_duration": "Uninstall completed successfully in {0} seconds",
  "uninstall.perform.uninstalled_components": "Uninstalled components: {0}",
  "uninstall.perform.unexpected_error": "Unexpected error during uninstall: {0}",
  "uninstall.cleanup.removed_dir": "Removed installation directory: {0}",
  "uninstall.cleanup.remove_error": "Could not remove installation directory: {0}",
  "uninstall.cleanup.error": "Error during cleanup: {0}",
  "uninstall.run.header": "SuperClaude Uninstall v3.0",
  "uninstall.run.subtitle": "Removing SuperClaude framework components",
  "uninstall.run.not_found": "No SuperClaude installation found in {0}",
  "uninstall.run.cancelled": "Uninstall cancelled by user",
  "uninstall.run.no_components_selected": "No components selected for uninstall",
  "uninstall.run.confirm_complete": "This will completely remove SuperClaude. Continue?",
  "uninstall.run.confirm_specific": "This will remove {0} component(s). Continue?",
  "uninstall.run.success": "SuperClaude uninstall completed successfully!",
  "uninstall.run.complete_header": "Uninstall complete:",
  "uninstall.run.removed_from": "SuperClaude has been removed from {0}",
  "uninstall.run.reinstall_prompt": "You can reinstall anytime using 'SuperClaude install'",
  "uninstall.run.failures": "Uninstall completed with some failures. Check logs for details.",
  "backup.parser.help": "Backup and restore SuperClaude installations",
  "backup.parser.description": "Create, list, restore, and manage SuperClaude installation backups",
  "backup.parser.create_help": "Create a new backup",
  "backup.parser.list_help": "List available backups",
  "backup.parser.restore_help": "Restore from backup (optionally specify backup file)",
  "backup.parser.info_help": "Show information about a specific backup file",
  "backup.parser.cleanup_help": "Clean up old backup files",
  "backup.parser.backup_dir_help": "Backup directory (default: <install-dir>/backups)",
  "backup.parser.name_help": "Custom backup name (for --create)",
  "backup.parser.compress_help": "Compression method (default: gzip)",
  "backup.parser.overwrite_help": "Overwrite existing files during restore",
  "backup.parser.keep_help": "Number of backups to keep during cleanup (default: 5)",
  "backup.parser.older_than_help": "Remove backups older than N days",
  "backup.list.header": "Available Backups",
  "backup.list.no_backups": "No backups found",
  "backup.list.name_header": "Name",
  "backup.list.size_header": "Size",
  "backup.list.created_header": "Created",
  "backup.list.files_header": "Files",
  "backup.list.unknown": "unknown",
  "backup.create.no_installation": "No SuperClaude installation found in {0}",
  "backup.create.creating": "Creating backup: {0}",
  "backup.create.added_files": "Added {0} files to backup",
  "backup.create.add_error": "Could not add {0} to backup: {1}",
  "backup.create.success": "Backup created successfully in {0} seconds",
  "backup.create.file": "Backup file: {0}",
  "backup.create.files_archived": "Files archived: {0}",
  "backup.create.size": "Backup size: {0}",
  "backup.create.failed": "Failed to create backup: {0}",
  "backup.restore.not_found": "Backup file not found: {0}",
  "backup.restore.invalid": "Invalid backup file: {0}",
  "backup.restore.restoring": "Restoring from backup: {0}",
  "backup.restore.creating_backup": "Creating backup of current installation before restore",
  "backup.restore.skipping": "Skipping existing file: {0}",
  "backup.restore.error": "Could not restore {0}: {1}",
  "backup.restore.restored_files": "Restored {0} files",
  "backup.restore.success": "Restore completed successfully in {0} seconds",
  "backup.restore.files_restored": "Files restored: {0}",
  "backup.restore.failed": "Failed to restore backup: {0}",
  "backup.restore.no_backups": "No backups available for restore",
  "backup.restore.select_header": "Select Backup to Restore:",
  "backup.restore.select_prompt": "Select backup:",
  "backup.cleanup.no_backups": "No backups found to clean up",
  "backup.cleanup.cleaning_up": "Cleaning up {0} old backups",
  "backup.cleanup.removed": "Removed backup: {0}",
  "backup.cleanup.error": "Could not remove {0}: {1}",
  "backup.cleanup.failed": "Failed to cleanup backups: {0}",
  "backup.run.header": "SuperClaude Backup v3.0",
  "backup.run.subtitle": "Backup and restore SuperClaude installations",
  "backup.run.restore_cancelled": "Restore cancelled by user",
  "backup.run.info_header": "Backup Information:",
  "backup.run.info_file": "File:",
  "backup.run.info_size": "Size:",
  "backup.run.info_created": "Created:",
  "backup.run.info_files": "Files:",
  "backup.run.info_framework_version": "Framework Version:",
  "backup.run.info_components": "Components:",
  "backup.run.info_not_found": "Backup file not found: {0}",
  "backup.run.no_op": "No backup operation specified",
  "backup.run.create_success": "Backup operation completed successfully!",
  "backup.run.restore_success": "Restore operation completed successfully!",
  "backup.run.failed": "Backup operation failed. Check logs for details.",
  "backup.run.cancelled": "Backup operation cancelled by user",
  "global.verbose_help": "Enable verbose logging",
  "global.quiet_help": "Suppress all output except errors",
  "global.install_dir_help": "Target installation directory (default: {0})",
  "global.dry_run_help": "Simulate operation without making changes",
  "global.force_help": "Force execution, skipping checks",
  "global.yes_help": "Automatically answer yes to all prompts",
  "config.error.expected_object": "Expected object, got {0}",
  "config.error.expected_array": "Expected array, got {0}",
  "config.error.expected_string": "Expected string, got {0}",
  "config.error.expected_integer": "Expected integer, got {0}",
  "config.error.features_not_found": "Features config not found: {0}",
  "config.error.invalid_json": "Invalid JSON in {0}: {1}",
  "config.error.invalid_features_schema": "Invalid features schema: {0}",
  "config.error.reqs_not_found": "Requirements config not found: {0}",
  "config.error.invalid_reqs_schema": "Invalid requirements schema: {0}",
  "config.error.profile_not_found": "Profile not found: {0}",
  "config.error.profile_missing_components": "Profile must contain 'components' field",
  "config.error.profile_components_not_list": "Profile 'components' must be a list",
  "config.error.unknown_component_in_profile": "Unknown component in profile: {0}",
  "config.error.features_config_error": "Features config error: {0}",
  "config.error.reqs_config_error": "Requirements config error: {0}",
  "file.error.source_not_found": "Source file not found: {0}",
  "file.error.source_not_a_file": "Source is not a file: {0}",
  "file.dry_run.copy_file": "[DRY RUN] Would copy {0} -> {1}",
  "file.error.copy_file_error": "Error copying {0} to {1}: {2}",
  "file.error.source_dir_not_found": "Source directory not found: {0}",
  "file.error.source_not_a_dir": "Source is not a directory: {0}",
  "file.dry_run.copy_dir": "[DRY RUN] Would copy directory {0} -> {1}",
  "file.error.copy_dir_error": "Error copying directory {0} to {1}: {2}",
  "file.dry_run.create_dir": "[DRY RUN] Would create directory {0}",
  "file.error.create_dir_error": "Error creating directory {0}: {1}",
  "file.dry_run.remove_file": "[DRY RUN] Would remove file {0}",
  "file.warning.not_a_file": "Warning: {0} is not a file, skipping",
  "file.error.remove_file_error": "Error removing file {0}: {1}",
  "file.dry_run.remove_dir": "[DRY RUN] Would {0} directory {1}",
  "file.error.remove_dir_error": "Error removing directory {0}: {1}",
  "file.dry_run.make_executable": "[DRY RUN] Would make {0} executable",
  "file.error.make_executable_error": "Error making {0} executable: {1}",
  "file.dry_run.cleanup": "[DRY RUN] Would cleanup tracked files",
  "settings.error.load_settings": "Could not load settings from {0}: {1}",
  "settings.error.save_settings": "Could not save settings to {0}: {1}",
  "settings.error.load_metadata": "Could not load metadata from {0}: {1}",
  "settings.error.save_metadata": "Could not save metadata to {0}: {1}",
  "settings.error.backup_nonexistent": "Cannot backup non-existent settings file",
  "commands.component.description": "SuperClaude slash command definitions",
  "commands.install.installing": "Installing SuperClaude command definitions...",
  "commands.install.metadata_updated": "Updated metadata with commands configuration",
  "commands.install.registration_updated": "Updated metadata with commands component registration",
  "commands.install.metadata_error": "Failed to update metadata: {0}",
  "commands.uninstall.uninstalling": "Uninstalling SuperClaude commands component...",
  "commands.uninstall.removed": "Removed {0}",
  "commands.uninstall.remove_error": "Could not remove {0}",
  "commands.uninstall.removed_old": "Removed old {0}",
  "commands.uninstall.remove_old_error": "Could not remove old {0}",
  "commands.uninstall.also_removed_old": "Also removed {0} commands from old location",
  "commands.uninstall.removed_sc_dir": "Removed empty sc commands directory",
  "commands.uninstall.removed_parent_dir": "Removed empty parent commands directory",
  "commands.uninstall.remove_dir_error": "Could not remove commands directory: {0}",
  "commands.uninstall.removed_from_metadata": "Removed commands component from metadata",
  "commands.uninstall.metadata_error": "Could not update metadata: {0}",
  "commands.uninstall.success": "Commands component uninstalled ({0} files removed)",
  "commands.uninstall.unexpected_error": "Unexpected error during commands uninstallation: {0}",
  "commands.update.updating": "Updating SuperClaude commands component...",
  "commands.update.already_latest": "Commands component already at version {0}",
  "commands.update.updating_from_to": "Updating commands component from {0} to {1}",
  "commands.update.backed_up": "Backed up {0}",
  "commands.update.success": "Commands component updated to version {0}",
  "commands.update.restore_failed": "Update failed, restoring from backup...",
  "commands.update.restored": "Restored {0}",
  "commands.update.restore_error": "Could not restore {0}: {1}",
  "commands.update.unexpected_error": "Unexpected error during commands update: {0}",
  "commands.validate.no_sc_dir": "SC commands directory not found",
  "commands.validate.missing_file": "Missing command file: {0}",
  "commands.validate.not_a_file": "Command file is not a regular file: {0}",
  "commands.validate.not_registered": "Commands component not registered in metadata",
  "commands.validate.version_mismatch": "Version mismatch: installed {0}, expected {1}",
  "commands.migrate.found_commands": "Found {0} existing commands to migrate to sc/ subdirectory",
  "commands.migrate.create_dir_error": "Could not create sc commands directory: {0}",
  "commands.migrate.migrated": "Migrated {0} to sc/ subdirectory",
  "commands.migrate.copy_error": "Could not copy {0} to sc/ subdirectory",
  "commands.migrate.error": "Error migrating {0}: {1}",
  "commands.migrate.success": "Successfully migrated {0} commands to /sc: namespace",
  "commands.migrate.info": "Commands are now available as /sc:analyze, /sc:build, etc.",
  "commands.migrate.remove_old_dir_error": "Could not remove old commands directory: {0}",
  "commands.migrate.migration_error": "Error during command migration: {0}",
  "core.component.description": "SuperClaude framework documentation and core files",
  "core.framework.description": "AI-enhanced development framework for Claude Code",
  "core.install.installing": "Installing SuperClaude core framework files...",
  "core.install.metadata_updated": "Updated metadata with framework configuration",
  "core.install.registration_updated": "Updated metadata with core component registration",
  "core.install.migrated_data": "Migrated existing SuperClaude data from settings.json",
  "core.install.metadata_error": "Failed to update metadata: {0}",
  "core.install.create_dir_error": "Could not create directory: {0}",
  "core.uninstall.uninstalling": "Uninstalling SuperClaude core component...",
  "core.uninstall.removed": "Removed {0}",
  "core.uninstall.remove_error": "Could not remove {0}",
  "core.uninstall.removed_from_metadata": "Removed core component from metadata",
  "core.uninstall.metadata_error": "Could not update metadata: {0}",
  "core.uninstall.success": "Core component uninstalled ({0} files removed)",
  "core.uninstall.unexpected_error": "Unexpected error during core uninstallation: {0}",
  "core.update.updating": "Updating SuperClaude core component...",
  "core.update.already_latest": "Core component already at version {0}",
  "core.update.updating_from_to": "Updating core component from {0} to {1}",
  "core.update.backed_up": "Backed up {0}",
  "core.update.success": "Core component updated to version {0}",
  "core.update.restore_failed": "Update failed, restoring from backup...",
  "core.update.restored": "Restored {0}",
  "core.update.restore_error": "Could not restore {0}: {1}",
  "core.update.unexpected_error": "Unexpected error during core update: {0}",
  "core.validate.missing_file": "Missing framework file: {0}",
  "core.validate.not_a_file": "Framework file is not a regular file: {0}",
  "core.validate.not_registered": "Core component not registered in metadata",
  "core.validate.version_mismatch": "Version mismatch: installed {0}, expected {1}",
  "core.validate.missing_config": "Missing framework configuration in metadata",
  "core.validate.missing_key": "Missing framework.{0} in metadata",
  "core.validate.metadata_error": "Could not validate metadata: {0}",
  "hooks.component.description": "Claude Code hooks integration (future-ready)",
  "hooks.install.installing": "Installing SuperClaude hooks component...",
  "hooks.install.placeholder": "Hooks are not yet implemented - installing placeholder component",
  "hooks.install.create_dir_error": "Could not create hooks directory: {0}",
  "hooks.install.placeholder_created": "Created hooks placeholder file",
  "hooks.install.placeholder_error": "Could not create placeholder file: {0}",
  "hooks.install.registration_updated": "Updated metadata with hooks component registration",
  "hooks.install.metadata_error": "Failed to update metadata for hooks component: {0}",
  "hooks.install.success_placeholder": "Hooks component installed successfully (placeholder)",
  "hooks.install.installing_actual": "Installing actual hook files...",
  "hooks.install.no_hooks_found": "No hook files found to install",
  "hooks.install.copying": "Copying {0} to {1}",
  "hooks.install.copy_success": "Successfully copied {0}",
  "hooks.install.copy_failed": "Failed to copy {0}",
  "hooks.install.copy_summary_error": "Only {0}/{1} hook files copied successfully",
  "hooks.install.success": "Hooks component installed successfully ({0} hook files)",
  "hooks.install.metadata_updated": "Updated metadata with hooks configuration",
  "hooks.uninstall.uninstalling": "Uninstalling SuperClaude hooks component...",
  "hooks.uninstall.removed": "Removed {0}",
  "hooks.uninstall.removed_placeholder": "Removed hooks placeholder",
  "hooks.uninstall.removed_dir": "Removed empty hooks directory",
  "hooks.uninstall.remove_dir_error": "Could not remove hooks directory: {0}",
  "hooks.uninstall.removed_from_settings": "Removed hooks component and configuration from settings.json",
  "hooks.uninstall.settings_error": "Could not update settings.json: {0}",
  "hooks.uninstall.success": "Hooks component uninstalled ({0} files removed)",
  "hooks.uninstall.unexpected_error": "Unexpected error during hooks uninstallation: {0}",
  "hooks.update.updating": "Updating SuperClaude hooks component...",
  "hooks.update.already_latest": "Hooks component already at version {0}",
  "hooks.update.updating_from_to": "Updating hooks component from {0} to {1}",
  "hooks.update.backed_up": "Backed up {0}",
  "hooks.update.success": "Hooks component updated to version {0}",
  "hooks.update.restore_failed": "Update failed, restoring from backup...",
  "hooks.update.restored": "Restored {0}",
  "hooks.update.restore_error": "Could not restore {0}: {1}",
  "hooks.update.unexpected_error": "Unexpected error during hooks update: {0}",
  "hooks.validate.no_dir": "Hooks directory not found",
  "hooks.validate.not_registered": "Hooks component not registered in settings.json",
  "hooks.validate.version_mismatch": "Version mismatch: installed {0}, expected {1}",
  "hooks.validate.no_files": "No hook files or placeholder found",
  "mcp.component.description": "MCP server integration (Context7, Sequential, Magic, Playwright)",
  "mcp.validate.no_node": "Node.js not found - required for MCP servers",
  "mcp.validate.found_node": "Found Node.js {0}",
  "mcp.validate.node_version_error": "Node.js version {0} found, but version 18+ required",
  "mcp.validate.parse_node_version_error": "Could not parse Node.js version: {0}",
  "mcp.validate.no_claude_cli": "Claude CLI not found - required for MCP server management",
  "mcp.validate.found_claude_cli": "Found Claude CLI {0}",
  "mcp.validate.no_npm": "npm not found - required for MCP server installation",
  "mcp.validate.found_npm": "Found npm {0}",
  "mcp.status.list_error": "Could not list MCP servers: {0}",
  "mcp.status.check_error": "Error checking MCP server status: {0}",
  "mcp.install.installing": "Installing MCP server: {0}",
  "mcp.install.already_installed": "MCP server {0} already installed",
  "mcp.install.api_key_default_desc": "API key for {0}",
  "mcp.install.api_key_required": "MCP server '{0}' requires an API key",
  "mcp.install.api_key_env": "Environment variable: {0}",
  "mcp.install.api_key_desc": "Description: {0}",
  "mcp.install.api_key_not_found": "API key {0} not found in environment",
  "mcp.install.api_key_proceeding_warning": "Proceeding without {0} - server may not function properly",
  "mcp.install.dry_run": "Would install MCP server (user scope): claude mcp add -s user {0} {1} -y {2}",
  "mcp.install.running": "Running: claude mcp add -s user {0} {1} -y {2}",
  "mcp.install.success": "Successfully installed MCP server (user scope): {0}",
  "mcp.install.failed": "Failed to install MCP server {0}: {1}",
  "mcp.install.timeout": "Timeout installing MCP server {0}",
  "mcp.install.error": "Error installing MCP server {0}: {1}",
  "mcp.uninstall.uninstalling": "Uninstalling MCP server: {0}",
  "mcp.uninstall.not_installed": "MCP server {0} not installed",
  "mcp.uninstall.running": "Running: claude mcp remove {0} (auto-detect scope)",
  "mcp.uninstall.success": "Successfully uninstalled MCP server: {0}",
  "mcp.uninstall.failed": "Failed to uninstall MCP server {0}: {1}",
  "mcp.uninstall.timeout": "Timeout uninstalling MCP server {0}",
  "mcp.uninstall.error": "Error uninstalling MCP server {0}: {1}",
  "mcp.component.installing": "Installing SuperClaude MCP servers...",
  "mcp.component.required_failed": "Required MCP server {0} failed to install",
  "mcp.component.verifying": "Verifying MCP server installation...",
  "mcp.component.server_list": "MCP servers list:",
  "mcp.component.verify_error": "Could not verify MCP server installation",
  "mcp.component.verify_exception": "Could not verify MCP installation: {0}",
  "mcp.component.some_failed": "Some MCP servers failed to install: {0}",
  "mcp.component.partial_success": "MCP component partially installed ({0} servers)",
  "mcp.component.success": "MCP component installed successfully ({0} servers)",
  "mcp.component.registration_updated": "Updated metadata with MCP component registration",
  "mcp.component.metadata_error": "Failed to update metadata: {0}",
  "mcp.component.uninstalling": "Uninstalling SuperClaude MCP servers...",
  "mcp.component.removed_from_metadata": "Removed MCP component from metadata",
  "mcp.component.uninstall_success": "MCP component uninstalled ({0} servers removed)",
  "mcp.component.uninstall_error": "Unexpected error during MCP uninstallation: {0}",
  "mcp.update.updating": "Updating SuperClaude MCP servers...",
  "mcp.update.already_latest": "MCP component already at version {0}",
  "mcp.update.updating_from_to": "Updating MCP component from {0} to {1}",
  "mcp.update.server_error": "Error updating MCP server {0}: {1}",
  "mcp.update.some_failed": "Some MCP servers failed to update: {0}",
  "mcp.update.success": "MCP component updated to version {0}",
  "mcp.update.unexpected_error": "Unexpected error during MCP update: {0}",
  "mcp.validate.not_registered": "MCP component not registered in metadata",
  "mcp.validate.version_mismatch": "Version mismatch: installed {0}, expected {1}",
  "mcp.validate.cli_error": "Could not communicate with Claude CLI for MCP server verification",
  "mcp.validate.server_not_found": "Required MCP server not found: {0}",
  "component.prereq.source_dir_not_found": "Source directory not found: {0}",
  "component.prereq.missing_files": "Missing component files: {0}",
  "component.prereq.no_write_permission": "No write permissions to {0}: {1}",
  "component.prereq.create_install_dir_error": "Could not create install directory: {0}",
  "component.install.unexpected_error": "Unexpected error during {0} installation: {1}",
  "component.install.copying": "Copying {0} to {1}",
  "component.install.copy_success": "Successfully copied {0}",
  "component.install.copy_failed": "Failed to copy {0}",
  "component.install.copy_summary_error": "Only {0}/{1} files copied successfully",
  "component.install.success": "{0} component installed successfully ({1} files)",
  "component.validate.missing_file": "Missing file: {0}",
  "component.validate.not_registered": "Component not registered in settings.json",
  "component.discover.source_dir_not_found": "Source directory not found: {0}",
  "component.discover.source_not_a_dir": "Source path is not a directory: {0}",
  "component.discover.discovered_files": "Discovered {0} {1} files in {2}",
  "component.discover.files_found": "Files found: {0}",
  "component.discover.permission_denied": "Permission denied accessing directory: {0}",
  "component.discover.error": "Error discovering files in {0}: {1}"
}
