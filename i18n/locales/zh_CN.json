{
  "metadata": {
    "language": "zh_CN",
    "name": "简体中文",
    "version": "1.0.0",
    "build_time": "2025-08-08T16:18:14.354105",
    "total_items": 118,
    "build_cost": 1e-06,
    "quality_score": 0.991
  },
  "commands": {
    "document": "为特定组件、功能或特性生成精确、集中的文档。",
    "spawn": "将复杂请求分解为可管理的子任务并协调其执行。",
    "estimate": "根据复杂性分析，为任务、功能或项目生成准确的开发估算。",
    "i18n": "allowed-tools: [Read, Write, Bash, TodoWrite]",
    "implement": "通过智能专家激活和全面的开发支持，实现功能、组件和代码功能。",
    "troubleshoot": "系统地诊断和解决代码、构建、部署或系统行为中的问题。",
    "improve": "系统地改进代码质量、性能、可维护性和最佳实践。",
    "explain": "清晰、全面地解释代码功能、概念或系统行为。",
    "analyze": "在质量、安全、性能和架构领域执行全面的代码分析。",
    "workflow": "分析产品需求文档 (PRD) 和功能规范，以生成全面的、分步的实现工作流，并提供专家指导、依赖映射和自动化任务编排。",
    "load": "加载和分析项目上下文、配置、依赖项和环境设置。",
    "index": "创建和维护全面的项目文档、索引和知识库。",
    "build": "构建、编译和打包项目，并提供全面的错误处理和优化。",
    "git": "执行 Git 操作，并提供智能提交消息、分支管理和工作流优化。",
    "task": "通过智能工作流管理、跨会话持久性、分层任务组织和高级编排功能执行复杂任务。",
    "design": "设计系统架构、API、组件接口和技术规范。",
    "cleanup": "系统地清理代码、删除死代码、优化导入并改进项目结构。",
    "test": "执行测试、生成全面的测试报告并维护测试覆盖率标准。"
  },
  "personas": {
    "architect": "系统架构专家，长期思考导向，可扩展性专家",
    "frontend": "用户体验专家，无障碍倡导者，性能意识开发者",
    "backend": "可靠性工程师，API专家，数据完整性导向",
    "analyzer": "根本原因专家，循证调查员，系统分析师",
    "security": "威胁建模师，合规性专家，漏洞专家",
    "mentor": "知识转移专家，教育者，文档倡导者",
    "refactorer": "代码质量专家，技术债务管理者，整洁代码倡导者",
    "performance": "优化专家，瓶颈消除专家，指标驱动分析师",
    "qa": "质量倡导者，测试专家，边缘案例侦探",
    "devops": "基础设施专家，部署专家，可靠性工程师"
  },
  "ui": {
    "ui_extracted_0": "\nSuperClaude 安装系统的用户界面工具\n具有颜色和进度指示的跨平台控制台UI\n",
    "ui_extracted_21": "\n    RED = Fore.RED\n    GREEN = Fore.GREEN\n    YELLOW = Fore.YELLOW\n    BLUE = Fore.BLUE\n    MAGENTA = Fore.MAGENTA\n    CYAN = Fore.CYAN\n    WHITE = Fore.WHITE\n    RESET = Style.RESET_ALL\n    BRIGHT = Style.BRIGHT\n\n\nclass ProgressBar:\n    ",
    "ui_extracted_22": "具有可自定义显示的跨平台进度条",
    "ui_extracted_26": "\n        初始化进度条\n        \n        参数:\n            total: 要处理的项目总数\n            width: 进度条的字符宽度\n            prefix: 进度条前显示的文本\n            suffix: 进度条后显示的文本\n        ",
    "ui_extracted_29": "\n        更新进度条\n        \n        参数:\n            current: 当前进度值\n            message: 可选的显示消息\n        ",
    "ui_extracted_34": "\n        \n        # 格式化进度行\n        if message:\n            status = f",
    "ui_extracted_36": "\n        \n        progress_line = (\n            f",
    "ui_extracted_38": "\n        )\n        \n        # 如果太长则截断以适应终端\n        max_length = self.terminal_width - 5\n        if len(progress_line) > max_length:\n            # 计算长度时移除颜色代码\n            plain_line = progress_line.replace(Colors.GREEN, ",
    "ui_extracted_41": ")\n            if len(plain_line) > max_length:\n                progress_line = progress_line[:max_length] + ",
    "ui_extracted_42": "\n        \n        print(progress_line, end=",
    "ui_extracted_45": "\n        进度增加1\n        \n        参数:\n            message: 可选的显示消息\n        ",
    "ui_extracted_48": "\n        完成进度条\n        \n        参数:\n            message: 完成消息\n        ",
    "ui_extracted_56": "\n    \n    def __init__(self, title: str, options: List[str], multi_select: bool = False):\n        ",
    "ui_extracted_57": "\n        初始化菜单\n        \n        参数:\n            title: 菜单标题\n            options: 菜单选项列表\n            multi_select: 是否允许多选\n        ",
    "ui_extracted_58": "\n        self.title = title\n        self.options = options\n        self.multi_select = multi_select\n        self.selected = set() if multi_select else None\n        \n    def display(self) -> Union[int, List[int]]:\n        ",
    "ui_extracted_59": "\n        显示菜单并获取用户选择\n        \n        返回:\n            选定的选项索引（单选）或索引列表（多选）\n        ",
    "ui_extracted_62": " * len(self.title))\n        \n        for i, option in enumerate(self.options, 1):\n            if self.multi_select:\n                marker = ",
    "ui_extracted_63": " if i-1 in (self.selected or set()) else ",
    "ui_extracted_66": ")\n        \n        if self.multi_select:\n            print(f",
    "ui_extracted_69": ").strip().lower()\n                \n                if self.multi_select:\n                    if user_input == ",
    "ui_extracted_71": ":\n                        return []\n                    else:\n                        # Parse comma-separated numbers\n                        selections = []\n                        for part in user_input.split(",
    "ui_extracted_72": "):\n                            part = part.strip()\n                            if part.isdigit():\n                                idx = int(part) - 1\n                                if 0 <= idx < len(self.options):\n                                    selections.append(idx)\n                                else:\n                                    raise ValueError(f",
    "ui_extracted_74": ")\n                        return list(set(selections))  # Remove duplicates\n                else:\n                    if user_input.isdigit():\n                        choice = int(user_input) - 1\n                        if 0 <= choice < len(self.options):\n                            return choice\n                        else:\n                            print(f",
    "ui_extracted_77": ")\n                    return [] if self.multi_select else -1\n                else:\n                    print(f",
    "ui_extracted_100": ")\n\n\ndef display_success(message: str) -> None:\n    ",
    "ui_extracted_101": "显示成功消息",
    "ui_extracted_110": "显示步骤进度",
    "welcome": "欢迎使用 SuperClaude 安装向导",
    "installation_success": "安装成功！",
    "installation_failed": "安装失败。请检查日志。",
    "select_components": "请选择要安装的组件：",
    "config_saved": "配置保存成功",
    "loading": "加载中...",
    "processing": "正在处理请求...",
    "analyzing": "正在分析代码...",
    "building": "正在构建项目...",
    "completed": "操作成功完成",
    "cancelled": "操作已由用户取消",
    "please_wait": "请稍候，我们正在处理您的请求",
    "choose_option": "请选择一个选项：",
    "confirm_action": "您确定要继续吗？",
    "click_continue": "点击继续",
    "ready": "就绪",
    "busy": "忙碌",
    "connected": "已连接",
    "disconnected": "已断开"
  },
  "errors": {
    "error_settings_manager_0": "无法备份不存在的设置文件",
    "file_not_found": "文件未找到：{filename}",
    "permission_denied": "权限被拒绝。请检查文件权限",
    "file_already_exists": "文件已存在：{filename}",
    "directory_not_found": "目录未找到：{dirname}",
    "connection_failed": "连接失败。请检查您的网络",
    "connection_timeout": "连接超时。请重试",
    "api_error": "API请求失败，错误：{error}",
    "rate_limit_exceeded": "超出速率限制。请稍后再试",
    "invalid_config": "配置格式无效",
    "missing_config": "配置文件未找到",
    "config_parse_error": "解析配置文件出错",
    "component_not_found": "组件未找到：{component}",
    "component_load_failed": "加载组件失败：{component}",
    "dependency_missing": "缺少依赖项：{dependency}",
    "command_failed": "命令执行失败",
    "invalid_arguments": "提供了无效参数",
    "unauthorized_operation": "未经授权的操作"
  },
  "help": {
    "help_README_0": "```bash\n# 快速设置（推荐给大多数用户）\npython3 -m SuperClaude install\n```",
    "help_README_1": "```bash\n# 快速设置（推荐给大多数用户）\nSuperClaude install\n```",
    "help_superclaude-user-guide_0": "- **提供内容**：最新的文档、代码示例、设计模式\n- **示例**：`/build react-app --c7` 获取 React 最佳实践",
    "help_superclaude-user-guide_1": "### 检测引擎 🧠",
    "help_superclaude-user-guide_2": "```bash\n# 为提高速度，禁用所有MCP服务器\n/sc:analyze large-codebase/ --no-mcp\n# → 执行速度提高40-60%，仅使用原生工具\n```",
    "help_superclaude-user-guide_3": "# 使用特定的MCP组合\n`/sc:build ui-components/ --magic --c7 --no-seq`\n# → UI生成 + 文档，跳过复杂分析\n```",
    "help_superclaude-user-guide_5": "- 大型操作 → 使用 `--uc` 和 `--delegate`\n- 简单任务 → 使用 `--no-mcp` 和 `--answer-only`\n- 关键操作 → 使用 `--safe-mode` 和 `--validate`",
    "help_superclaude-user-guide_6": "```bash\n# 对于大型操作，请使用压缩\n/sc:analyze huge-codebase/ --uc --delegate auto\n```",
    "help_superclaude-user-guide_7": "\"/sc:command --random-flags-that-look-important\"",
    "help_superclaude-user-guide_8": "```\n/sc:analyze large-project/ --verbose\n# → 显示详细的执行步骤\n```",
    "help_superclaude-user-guide_9": "`/sc:analyze code/ --uc --c7 # 仅压缩 + 文档`",
    "help_superclaude-user-guide_10": "# 将工作分解成更小的块\n/sc:analyze module1/\n/sc:analyze module2/\n/sc:analyze module3/\n# 而不是 /analyze entire-project/\n```",
    "help_superclaude-user-guide_11": "- 质量门禁确保一致、可靠的产出",
    "usage_analyze": "用法: /sc:analyze [目标] --focus [领域]",
    "usage_build": "用法: /sc:build [目标] [选项]",
    "usage_improve": "用法: /sc:improve [目标] --focus [质量|性能|安全]",
    "feature_personas": "SuperClaude 利用智能专家角色提供专业知识。",
    "feature_wave_mode": "波浪模式支持对复杂操作进行多阶段编排。",
    "feature_mcp_servers": "MCP 服务器为特定领域提供增强功能。",
    "getting_started": "SuperClaude 入门指南",
    "best_practices": "有效使用SuperClaude的最佳实践",
    "troubleshooting": "常见问题与解决方案",
    "example_basic": "基本用法示例",
    "example_advanced": "高级用法示例",
    "see_documentation": "更多详情请参阅文档",
    "refer_to_guide": "请查阅用户指南"
  }
}