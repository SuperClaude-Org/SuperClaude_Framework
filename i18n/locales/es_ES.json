{
  "metadata": {
    "language": "es_ES",
    "name": "Español",
    "version": "1.0.0",
    "build_time": "2025-08-08T16:21:57.882531",
    "total_items": 118,
    "build_cost": 1e-06,
    "quality_score": 0.994
  },
  "commands": {
    "document": "Generar documentación precisa y enfocada para componentes, funciones o características específicas.",
    "spawn": "Descomponer solicitudes complejas en subtareas manejables y coordinar su ejecución.",
    "estimate": "Generar estimaciones de desarrollo precisas para tareas, características o proyectos basadas en análisis de complejidad.",
    "i18n": "allowed-tools: [Read, Write, Bash, TodoWrite]",
    "implement": "Implementar características, componentes y funcionalidades de código con activación experta inteligente y soporte de desarrollo integral.",
    "troubleshoot": "Diagnosticar y resolver sistemáticamente problemas en el código, compilaciones, despliegues o comportamiento del sistema.",
    "improve": "Aplicar mejoras sistemáticas a la calidad del código, rendimiento, mantenibilidad y mejores prácticas.",
    "explain": "Ofrecer explicaciones claras y completas de la funcionalidad del código, conceptos o comportamiento del sistema.",
    "analyze": "Ejecutar análisis de código exhaustivos en los dominios de calidad, seguridad, rendimiento y arquitectura.",
    "workflow": "Analizar Documentos de Requisitos de Producto (PRD) y especificaciones de características para generar flujos de trabajo de implementación completos y paso a paso con orientación experta, mapeo de dependencias y orquestación automatizada de tareas.",
    "load": "Cargar y analizar el contexto del proyecto, configuraciones, dependencias y configuración del entorno.",
    "index": "Crear y mantener documentación, índices y bases de conocimiento completas del proyecto.",
    "build": "Construir, compilar y empaquetar proyectos con manejo de errores y optimización integrales.",
    "git": "Ejecutar operaciones Git con mensajes de confirmación inteligentes, gestión de ramas y optimización del flujo de trabajo.",
    "task": "Ejecutar tareas complejas con gestión inteligente del flujo de trabajo, persistencia entre sesiones, organización jerárquica de tareas y capacidades avanzadas de orquestación.",
    "design": "Diseñar la arquitectura del sistema, APIs, interfaces de componentes y especificaciones técnicas.",
    "cleanup": "Limpiar sistemáticamente el código, eliminar código muerto, optimizar importaciones y mejorar la estructura del proyecto.",
    "test": "Ejecutar pruebas, generar informes de prueba completos y mantener los estándares de cobertura de pruebas."
  },
  "personas": {
    "architect": "Especialista en arquitectura de sistemas, enfoque en el pensamiento a largo plazo, experto en escalabilidad",
    "frontend": "Especialista en UX, defensor de la accesibilidad, desarrollador consciente del rendimiento",
    "backend": "Ingeniero de fiabilidad, especialista en API, enfoque en la integridad de los datos",
    "analyzer": "Especialista en causa raíz, investigador basado en evidencia, analista sistemático",
    "security": "Modelador de amenazas, experto en cumplimiento, especialista en vulnerabilidades",
    "mentor": "Especialista en transferencia de conocimiento, educador, defensor de la documentación",
    "refactorer": "Especialista en calidad de código, gestor de deuda técnica, defensor del código limpio",
    "performance": "Especialista en optimización, experto en eliminación de cuellos de botella, analista basado en métricas",
    "qa": "Defensor de la calidad, especialista en pruebas, detective de casos extremos",
    "devops": "Especialista en infraestructura, experto en despliegue, ingeniero de fiabilidad"
  },
  "ui": {
    "ui_extracted_0": "Utilidades de interfaz de usuario para el sistema de instalación de SuperClaude\nIU de consola multiplataforma con colores e indicación de progreso",
    "ui_extracted_21": "    ROJO = Fore.RED\n    VERDE = Fore.GREEN\n    AMARILLO = Fore.YELLOW\n    AZUL = Fore.BLUE\n    MAGENTA = Fore.MAGENTA\n    CIAN = Fore.CYAN\n    BLANCO = Fore.WHITE\n    REINICIAR = Style.RESET_ALL\n    BRILLANTE = Style.BRIGHT\n\n\nclass ProgressBar:\n    ",
    "ui_extracted_22": "Barra de progreso multiplataforma con visualización personalizable",
    "ui_extracted_26": "        Inicializa la barra de progreso\n        \n        Args:\n            total: Número total de elementos a procesar\n            width: Ancho de la barra de progreso en caracteres\n            prefix: Texto a mostrar antes de la barra de progreso\n            suffix: Texto a mostrar después de la barra de progreso\n        ",
    "ui_extracted_29": "        Actualiza la barra de progreso\n        \n        Args:\n            current: Valor de progreso actual\n            message: Mensaje opcional a mostrar\n        ",
    "ui_extracted_34": "        \n        # Formatear línea de progreso\n        if message:\n            status = f",
    "ui_extracted_36": "        \n        progress_line = (\n            f",
    "ui_extracted_38": "        )\n        \n        # Truncar si es demasiado largo para el terminal\n        max_length = self.terminal_width - 5\n        if len(progress_line) > max_length:\n            # Eliminar códigos de color para el cálculo de la longitud\n            plain_line = progress_line.replace(Colors.GREEN, ",
    "ui_extracted_41": ")\n            if len(plain_line) > max_length:\n                progress_line = progress_line[:max_length] + ",
    "ui_extracted_42": "\n        \n        print(progress_line, end=",
    "ui_extracted_45": "        Incrementa el progreso en 1\n        \n        Args:\n            message: Mensaje opcional a mostrar\n        ",
    "ui_extracted_48": "        Completa la barra de progreso\n        \n        Args:\n            message: Mensaje de finalización\n        ",
    "ui_extracted_56": "    \n    def __init__(self, title: str, options: List[str], multi_select: bool = False):\n        ",
    "ui_extracted_57": "        Inicializa el menú\n        \n        Args:\n            title: Título del menú\n            options: Lista de opciones del menú\n            multi_select: Permite selecciones múltiples\n        ",
    "ui_extracted_58": "        self.title = title\n        self.options = options\n        self.multi_select = multi_select\n        self.selected = set() if multi_select else None\n        \n    def display(self) -> Union[int, List[int]]:\n        ",
    "ui_extracted_59": "        Muestra el menú y obtiene la selección del usuario\n        \n        Returns:\n            Índice de la opción seleccionada (única) o lista de índices (selección múltiple)\n        ",
    "ui_extracted_62": " * len(self.title))\n        \n        for i, option in enumerate(self.options, 1):\n            if self.multi_select:\n                marker = ",
    "ui_extracted_63": " if i-1 in (self.selected or set()) else ",
    "ui_extracted_66": ")\n        \n        if self.multi_select:\n            print(f",
    "ui_extracted_69": ").strip().lower()\n                \n                if self.multi_select:\n                    if user_input == ",
    "ui_extracted_71": ":\n                        return []\n                    else:\n                        # Parse comma-separated numbers\n                        selections = []\n                        for part in user_input.split(",
    "ui_extracted_72": "):\n                            part = part.strip()\n                            if part.isdigit():\n                                idx = int(part) - 1\n                                if 0 <= idx < len(self.options):\n                                    selections.append(idx)\n                                else:\n                                    raise ValueError(f",
    "ui_extracted_74": ")\n                        return list(set(selections))  # Remove duplicates\n                else:\n                    if user_input.isdigit():\n                        choice = int(user_input) - 1\n                        if 0 <= choice < len(self.options):\n                            return choice\n                        else:\n                            print(f",
    "ui_extracted_77": ")\n                    return [] if self.multi_select else -1\n                else:\n                    print(f",
    "ui_extracted_100": ")\n\n\ndef display_success(message: str) -> None:\n    ",
    "ui_extracted_101": "Mostrar mensaje de éxito",
    "ui_extracted_110": "Mostrar progreso del paso",
    "welcome": "Bienvenido al asistente de instalación de SuperClaude",
    "installation_success": "¡Instalación completada con éxito!",
    "installation_failed": "La instalación falló. Por favor, revise los registros.",
    "select_components": "Por favor, seleccione los componentes a instalar:",
    "config_saved": "Configuración guardada con éxito",
    "loading": "Cargando...",
    "processing": "Procesando solicitud...",
    "analyzing": "Analizando código...",
    "building": "Construyendo proyecto...",
    "completed": "Operación completada con éxito",
    "cancelled": "Operación cancelada por el usuario",
    "please_wait": "Por favor, espere mientras procesamos su solicitud",
    "choose_option": "Por favor, elija una opción:",
    "confirm_action": "¿Está seguro de que desea continuar?",
    "click_continue": "Haga clic para continuar",
    "ready": "Listo",
    "busy": "Ocupado",
    "connected": "Conectado",
    "disconnected": "Desconectado"
  },
  "errors": {
    "error_settings_manager_0": "No se puede hacer una copia de seguridad de un archivo de configuración inexistente",
    "file_not_found": "Archivo no encontrado: {filename}",
    "permission_denied": "Permiso denegado. Por favor, revise los permisos del archivo",
    "file_already_exists": "El archivo ya existe: {filename}",
    "directory_not_found": "Directorio no encontrado: {dirname}",
    "connection_failed": "Conexión fallida. Por favor, revise su red",
    "connection_timeout": "Tiempo de conexión agotado. Por favor, inténtelo de nuevo",
    "api_error": "La solicitud de API falló con el error: {error}",
    "rate_limit_exceeded": "Límite de tasa excedido. Por favor, inténtelo de nuevo más tarde",
    "invalid_config": "Formato de configuración no válido",
    "missing_config": "Archivo de configuración no encontrado",
    "config_parse_error": "Error al analizar el archivo de configuración",
    "component_not_found": "Componente no encontrado: {component}",
    "component_load_failed": "No se pudo cargar el componente: {component}",
    "dependency_missing": "Dependencia faltante: {dependency}",
    "command_failed": "La ejecución del comando falló",
    "invalid_arguments": "Argumentos proporcionados no válidos",
    "unauthorized_operation": "Operación no autorizada"
  },
  "help": {
    "help_README_0": "```bash\n# Configuración rápida (recomendado para la mayoría de los usuarios)\npython3 -m SuperClaude install\n```",
    "help_README_1": "```bash\n# Configuración rápida (recomendada para la mayoría de los usuarios)\nSuperClaude install\n```",
    "help_superclaude-user-guide_0": "- **Lo que ofrece**: Documentación actualizada, ejemplos de código, patrones\n- **Ejemplo**: `/build react-app --c7` obtiene las mejores prácticas de React",
    "help_superclaude-user-guide_1": "### Motor de Detección 🧠",
    "help_superclaude-user-guide_2": "```bash\n# Deshabilita todos los servidores MCP para mayor velocidad\n/sc:analyze large-codebase/ --no-mcp\n# → Ejecución 40-60% más rápida, solo herramientas nativas\n```",
    "help_superclaude-user-guide_3": "```\n# Usar combinaciones específicas de MCP\n/sc:build ui-components/ --magic --c7 --no-seq\n# → Generación de UI + documentación, omitir análisis complejo\n```",
    "help_superclaude-user-guide_5": "- Operaciones grandes → Use `--uc` y `--delegate`\n- Tareas simples → Use `--no-mcp` y `--answer-only`\n- Operaciones críticas → Use `--safe-mode` y `--validate`",
    "help_superclaude-user-guide_6": "```bash\n# Para operaciones grandes, usa compresión\n/sc:analyze huge-codebase/ --uc --delegate auto\n```",
    "help_superclaude-user-guide_7": "\"/sc:comando --banderas-aleatorias-que-parecen-importantes\"",
    "help_superclaude-user-guide_8": "```\n/sc:analyze large-project/ --verbose\n# → Muestra los pasos de ejecución detallados\n```",
    "help_superclaude-user-guide_9": "/sc:analyze code/ --uc --c7 # Solo compresión + documentación\n```",
    "help_superclaude-user-guide_10": "# Dividir el trabajo en fragmentos más pequeños\n/sc:analyze module1/\n/sc:analyze module2/\n/sc:analyze module3/\n# En lugar de /analyze proyecto-completo/\n```",
    "help_superclaude-user-guide_11": "\"- Las puertas de calidad garantizan resultados consistentes y fiables\"",
    "usage_analyze": "Uso: /sc:analyze [objetivo] --focus [dominio]",
    "usage_build": "\"Uso: /sc:build [objetivo] [opciones]\"",
    "usage_improve": "Uso: /sc:improve [objetivo] --focus [calidad|rendimiento|seguridad]",
    "feature_personas": "SuperClaude utiliza personas inteligentes para proporcionar experiencia especializada.",
    "feature_wave_mode": "El modo Wave permite la orquestación multifase para operaciones complejas.",
    "feature_mcp_servers": "Los servidores MCP ofrecen capacidades mejoradas para dominios específicos.",
    "getting_started": "\"Primeros pasos con SuperClaude\"",
    "best_practices": "Mejores prácticas para usar SuperClaude de manera efectiva",
    "troubleshooting": "Problemas comunes y soluciones",
    "example_basic": "Ejemplo de uso básico",
    "example_advanced": "Ejemplo de uso avanzado",
    "see_documentation": "Consulte la documentación para obtener más detalles",
    "refer_to_guide": "Consulte la guía del usuario"
  }
}